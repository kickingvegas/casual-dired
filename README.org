* NOTICE

This package has been superseded by the package [[https://github.com/kickingvegas/casual][casual]]. Please install the package ~casual~ from either [[https://melpa.org/#/casual][MELPA]] or [[https://stable.melpa.org/#/casual][MELPA stable]].

Upon installation and upgrade of ~casual~, this package will be uninstalled from your Emacs configuration. Please revisit your configuration of Casual Dired in your initialization file(s) accordingly.

This repository should be treated as an archive. All future development on Casual Dired will be done in the [[https://github.com/kickingvegas/casual][Casual repository]].

* Casual Dired
An opinionated [[https://github.com/magit/transient][Transient]]-based user interface for the Emacs file manager [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html][Dired]].

[[file:docs/images/casual-dired-screenshot.png]]

* Motivation
While highly functional, Dired has a steep learning curve as it relies on single-key bindings for many of its commands. Menus are a user interface (UI) affordance that offer users discoverability and recognition that can lower Dired's learning curve. While menus are commonly associated with mouse-driven UI, the inclusion of Transient in Emacs core allows for a menu UI that is keyboard-driven. Casual Dired endeavors to offer this as many Emacs users prefer keyboard-driven workflows.

** Goals
- To provide a keyboard-driven menu UI to Dired.
- To provide casual access to common file manager operations.

** Non-Goals
- Full coverage of all Dired commands. Casual Dired is not intended to be a power user tool.
- Strict adherence to default Dired keybindings. That said, most Dired keybindings are honored.
- Strict adherence to Dired command naming. While Casual Dired is *mostly* in alignment with Dired’s command naming, there are cases where it will make an opinionated change if the name is deemed too vague or idiomatic.
- UX Stability (for now). Given that Casual Dired is early in its life-cycle, expect changes to its user experience in terms of menu hierarchy and keybinding choices in future releases.

* Requirements
Casual Dired requires usage of
- Emacs ≥ 29.1
- Casual Lib ≥ 1.1.0

Casual Dired has been verified with the following configuration. 
- Emacs 29.3 (macOS 14.4.1, Ubuntu Linux 22.04.4 LTS)
- GNU ~ls~ (coreutils 9.5, 8.32)

The Casual Dired /Sort By/ feature relies on the installation of GNU ~ls~ which must be configured (typically via ~PATH~) so it is available to Emacs. There is no checking by Casual Dired to verify that GNU ~ls~ is installed.

Users with earlier versions of GNU coreutils may still be able to use Casual Dired.

* Asks
As Casual Dired is new, we are looking for early adopters! Your [[https://github.com/kickingvegas/casual-dired/discussions][feedback]] is welcome as it will likely impact Casual Dired's evolution, particularly with regards to UI.

* Install
If installed via MELPA then add these lines to your Emacs initialization file with your binding of preference. 
#+begin_src elisp :lexical no
  (require 'casual-dired) 
  (keymap-set dired-mode-map "C-o" #'casual-dired-tmenu)
  (keymap-set dired-mode-map "s" #'casual-dired-sort-by-tmenu) ; optional
  (keymap-set dired-mode-map "/" #'casual-dired-search-replace-tmenu) ; optional
#+end_src

If you use ~use-package~, here is the recipe for installing it.
#+begin_src elisp :lexical no
  (use-package casual-dired
    :ensure t
    :bind (:map dired-mode-map
                ("C-o" . #'casual-dired-tmenu)
                ("s" . #'casual-dired-sort-by-tmenu)
                ("/" . #'casual-dired-search-replace-tmenu)))
#+end_src

In addition to binding the main menu ~casual-dired-tmenu~, the user can also bind the sort-by menu ~casual-dired-sort-by-tmenu~ and the search & replace menu ~casual-dired-search-replace-tmenu~. 

Included is a standard keymap for Dired sorting commands (~casual-dired-sort-menu~) which can be included in a context menu for a mouse-driven workflow. An example of this is shown below:

#+begin_src elisp :lexical no
  (require 'casual-dired)

  (defun casual-dired-context-menu-addons (menu click)
    "Customize context MENU with CLICK event."
    (easy-menu-add-item menu nil casual-dired-sort-menu)
    menu)

  (add-hook 'context-menu-functions #'casual-dired-context-menu-addons)
  (add-hook 'dired-mode-hook 'context-menu-mode)
#+end_src

For users running on Microsoft Windows, use [[https://www.gnu.org/software/emacs/manual/html_node/efaq-w32/Dired-ls.html][this guidance]] to configure GNU ~ls~ for running with Dired.

** A Note on Package Dependencies
Casual Dired requires Casual Lib which in turn requires a recent installation of Transient 0.6.0+ from either [[https://elpa.gnu.org/packages/transient.html][ELPA]] or [[https://melpa.org/#/transient][MELPA]]. As an older version of Transient is built-in to the Emacs release, the package manager ~package.el~ will /not/ update this package unless the customizable variable ~package-install-upgrade-built-in~ is set to ~t~. Set this variable and proceed with installing Casual Dired. Alternately invoking ~package-install~ with a prefix (~C-u~) will temporarily coerce the update of the built-in package. (example: ~C-u M-x package-install~ ~casual-dired~)

As Transient is closely tied to Magit, installing the latest version of Magit (via [[https://elpa.nongnu.org/nongnu/magit.html][non-GNU ELPA]] or [[https://melpa.org/#/magit][MELPA]]) before installing Casual Dired can also pick up the latest version of Transient.


* Usage
1. Invoke ~M-x dired~ to launch Dired.
2. When the point is in the Dired window, invoke ~C-o~ (or a binding of your choosing) to launch the Casual Dired menu.

** Enhanced Sorting
Casual Dired offers enhanced sorting capabilities through GNU ~ls~. Use this to sort your Dired buffer to preference. Filter dot files (.*) by disabling the ~--all~ option is available here.

[[file:docs/images/casual-dired-sort-by-screenshot.png]]

With the *Sort By* menu raised, one can save the switch settings for future use via the binding ~C-x C-s~ (~transient-save~). Note this is a global setting and will apply to all future calls to the *Sort By* menu.

** Search & Replace
Search and replace in multiple marked files using the ~/~ /Search & Replace/ menu item. This will raise a menu of Dired commands that will work on marked files. 

[[file:docs/images/casual-dired-search-replace.png]]

While most Dired commands use Emacs-style [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Regular-Expressions.html][regular expression syntax]], there are two commands that instead take instead *grep*-style syntax:

- (~g~) Find regex… (~dired-do-find-regexp~)
- (~G~) Find regex and replace… (~dired-do-find-regexp-and-replace~)

The *grep*-style syntax is dependent on the ~grep~ implementation that is installed and used by Emacs.

** Bulk Dired Operations
Casual Dired organizes a number of Dired commands that work on a set of marked files. These commands are presented in the *Utils* menu.

[[file:docs/images/casual-dired-utils-screenshot.png]]

* Configuration

As Dired has been around for a long time, the different ways of configuring it are myriad. Described below is a configuration used by the author that is consistent with the bindings used in Casual Dired.

** Initialization

#+begin_src elisp :lexical no
  (require 'dired)
  (require 'dired-x)
  (require 'wdired)
  (require 'hl-line)
  (require 'mouse)
  (require 'image-dired)
  (require 'image-dired-dired)
  (require 'casual-dired)

  (keymap-set dired-mode-map "C-o" #'casual-dired-tmenu)
  (keymap-set dired-mode-map "s" #'casual-dired-sort-by-tmenu)
  (keymap-set dired-mode-map "/" #'casual-dired-search-replace-tmenu)

  (add-hook 'dired-mode-hook 'hl-line-mode)
  (add-hook 'dired-mode-hook 'context-menu-mode)
  (add-hook 'dired-mode-hook 'dired-async-mode)
  (add-hook
   'dired-mode-hook
   (lambda ()
     (setq-local mouse-1-click-follows-link 'double)))

  (keymap-set dired-mode-map "M-o" #'dired-omit-mode)
  (keymap-set dired-mode-map "E" #'wdired-change-to-wdired-mode)
  (keymap-set dired-mode-map "M-n" #'dired-next-dirline)
  (keymap-set dired-mode-map "M-p" #'dired-prev-dirline)
  (keymap-set dired-mode-map "]" #'dired-next-subdir)
  (keymap-set dired-mode-map "[" #'dired-prev-subdir)
  (keymap-set dired-mode-map "A-M-<mouse-1>" #'browse-url-of-dired-file)
  (keymap-set dired-mode-map "<backtab>" #'dired-prev-subdir)
  (keymap-set dired-mode-map "TAB" #'dired-next-subdir)
  (keymap-set dired-mode-map "M-j" #'dired-goto-subdir)
  (keymap-set dired-mode-map ";" #'image-dired-dired-toggle-marked-thumbs)

  (keymap-set image-dired-thumbnail-mode-map "n" #'image-dired-display-next)
  (keymap-set image-dired-thumbnail-mode-map "p" #'image-dired-display-previous)
#+end_src

** Variables

Casual Dired offers a settings menu to customize a set of commonly used Dired variables. Use this to customize your Dired behavior to taste.

[[file:docs/images/casual-dired-settings-screenshot.png]]

If you have GNU ~ls~ installed and configured, use the ~l~ key to set the variable ~dired-use-ls-dired~ to ~t~ ("Use GNU ‘ls’ with --dired"). Otherwise this should be disabled.

** Unicode Symbol Support

By enabling “Use Unicode Symbols” from the Settings menu, Casual Dired will use Unicode symbols as appropriate in its menus. An example is shown below.

[[file:docs/images/casual-dired-screenshot-unicode.png]]

To ensure proper layout and spacing, your default typeface should be fixed-width or monospace and *must* support the Unicode symbols used.

* Common Menu Actions
Casual Dired is built using Transient menus and as such adopts much of its default behavior.

Each menu item has a /key/ and a /label/. The /key/ is what is typed by the user to select the menu item. A key can be prefixed with a meta (M-) or control (C-) key. Labels ending with a ~>~ character indicates that it will open another menu.

Dismissing a menu regardless of how deep you are in sub-menus can be done by entering ~C-q~. A menu can also be dismissed by entering ~C-g~, but this will return you to the parent menu.

If a mouse is available, a menu item can be selected by moving the mouse cursor over its label and pressing down button 1.

Pressing the ~?~ key will toggle help for all the menu items. Press the key of interest to get help for it.

Some menus (in particular the /Sort By/ menu) have arguments (example ~--all~) which you can set. You can persist these settings by typing ~C-x C-s~.

When a Transient menu is raised, a prefix argument (~C-u~) can be entered before selecting a menu item.

** Menu item notation
The following conventions are used to denote menu items.

If the label ends with a ~›~, it is a sub-menu.

If the label ends with an ~…~, the command will prompt you for an input value.

* Development
For users who wish to help contribute to Casual Dired or personally customize it for their own usage, please read the [[docs/developer.org][developer documentation]].

* Sponsorship
If you enjoy using Casual Dired, consider making a modest financial contribution to help support its development and maintenance.

[[https://www.buymeacoffee.com/kickingvegas][file:docs/images/default-yellow.png]]


* See Also
Casual Dired is part of a suite of user interfaces for different Emacs packages called [[https://github.com/kickingvegas/casual-suite][Casual Suite]].

Different interfaces include those for I-Search, Info, Calc, Bookmarks, RE-Builder, IBuffer, and others. Learn more about them today!

* Acknowledgments
A heartfelt thanks to all the contributors to Dired and [[https://github.com/magit/transient][Transient]]. Casual Dired would not be possible without your efforts.

